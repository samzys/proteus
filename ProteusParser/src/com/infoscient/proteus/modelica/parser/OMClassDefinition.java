/* Generated By:JJTree: Do not edit this line. OMClassDefinition.java */

package com.infoscient.proteus.modelica.parser;

import com.infoscient.proteus.types.BooleanType;
import com.infoscient.proteus.types.EnumType;

public class OMClassDefinition extends SimpleNode {

	@BooleanType(name = "Final", category = CATEGORY_CODE)
	public boolean final_;

	@BooleanType(name = "Encapsulated", category = CATEGORY_CODE)
	public boolean encapsulated;

	@BooleanType(name = "Partial", category = CATEGORY_CODE)
	public boolean partial;

	@EnumType(name = "Restriction", allowed = { TYPE_CLASS, TYPE_MODEL,
			TYPE_RECORD, TYPE_BLOCK, TYPE_CONNECTOR, TYPE_TYPE, TYPE_PACKAGE,
			TYPE_FUNCTION }, category = CATEGORY_CODE)
	public String restriction;

	public OMClassSpecifier classSpecifier;

	public OMClassDefinition(int i) {
		super(i);
	}

	public OMClassDefinition(ModelicaParser p, int i) {
		super(p, i);
	}

	/** Accept the visitor. * */
	public Object jjtAccept(ModelicaParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	public String toCode() {
		StringBuilder sb = new StringBuilder();
		if (final_) {
			sb.append("final ");
		}
		if (encapsulated) {
			sb.append("encapsulated ");
		}
		if (partial) {
			sb.append("partial ");
		}
		sb.append(restriction + " ");
		sb.append(classSpecifier.toCode() + ";\n");
		return sb.toString();
	}
	//	
	// public OMClassDefinition copy() {
	// OMClassDefinition copy = new OMClassDefinition(parser, id);
	// copy.final_ = final_;
	// copy.encapsulated = encapsulated;
	// copy.partial = partial;
	// copy.restriction = restriction;
	// copy.classSpecifier = classSpecifier.copy();
	// return copy;
	// }
}
