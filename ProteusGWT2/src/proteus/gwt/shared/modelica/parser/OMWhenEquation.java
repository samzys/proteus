/* Generated By:JJTree: Do not edit this line. OMWhenEquation.java */

package proteus.gwt.shared.modelica.parser;

import java.util.LinkedList;
import java.util.List;

public class OMWhenEquation extends SimpleNode {

	public OMExpression whenExpression;

	public List<OMEquation> whenEquations = new LinkedList<OMEquation>();

	public List<OMExpression> elseWhenExpressions = new LinkedList<OMExpression>();

	public List<List<OMEquation>> elseWhenEquationsList = new LinkedList<List<OMEquation>>();

	public OMWhenEquation(int id) {
		super(id);
	}

	public OMWhenEquation(ModelicaParser p, int id) {
		super(p, id);
	}

	/** Accept the visitor. * */
	@Override
	public Object jjtAccept(ModelicaParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	@Override
	public String toCode() {
		StringBuilder sb = new StringBuilder();
		sb.append("when " + whenExpression.toCode() + " then\n");
		for (OMEquation eq : whenEquations) {
			sb.append(eq.toCode() + ";\n");
		}
		int i = 0;
		for (OMExpression exp : elseWhenExpressions) {
			sb.append("elsewhen " + exp.toCode() + " then\n");
			List<OMEquation> list = elseWhenEquationsList.get(i++);
			if (list != null) {
				for (OMEquation eq : list) {
					sb.append(eq.toCode() + ";\n");
				}
			}
		}
		return sb.toString();
	}
}
