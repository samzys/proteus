/* Generated By:JJTree: Do not edit this line. OMEquation.java */

package proteus.gwt.shared.modelica.parser;

public class OMEquation extends SimpleNode {

	public OMSimpleExpression lhsExpression;

	public OMExpression rhsExpression;

	public OMIfEquation ifEquation;

	public OMForEquation forEquation;

	public OMConnectClause connectClause;

	public OMWhenEquation whenEquation;

	public String funcName;

	public OMFunctionCallArgs funcCallArgs;

	public OMComment comment;
	
	public OMComponentRef componentRef;

	public OMEquation(int id) {
		super(id);
	}

	public OMEquation(ModelicaParser p, int id) {
		super(p, id);
	}

	/** Accept the visitor. * */
	@Override
	public Object jjtAccept(ModelicaParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	@Override
	public String toCode() {
		StringBuilder sb = new StringBuilder();
		if (lhsExpression != null) {
			sb.append(lhsExpression.toCode() + " = " + rhsExpression.toCode());
		} else if (ifEquation != null) {
			sb.append(ifEquation.toCode());
		} else if (forEquation != null) {
			sb.append(forEquation.toCode());
		} else if (connectClause != null) {
			sb.append(connectClause.toCode());
		} else if (funcName != null) {
			sb.append(funcName + funcCallArgs.toCode());
		}
		sb.append(comment.toCode());
		return sb.toString();
	}
}
