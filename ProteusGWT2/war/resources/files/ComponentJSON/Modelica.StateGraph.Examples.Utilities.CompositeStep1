{"ID":"1228","diagramGraphic":{"graphicList":[],"extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"CompositeStep1","restriction":"model","wholeName":"Modelica.StateGraph.Examples.Utilities.CompositeStep1","comment":"Composite step used to demonstrate exceptions (in StateGraph.Examples.ShowExceptions)","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"\u003d{Line(points\u003d{{130.5, 0}, {155, 0}},color\u003d{0, 0, 0})}","startpin":"exitStep.outPort","endpin":"outPort"},{"value":"\u003d{Line(points\u003d{{-141, 0}, {-160, 0}},color\u003d{0, 0, 0})}","startpin":"initStep.inPort","endpin":"inPort"},{"value":"\u003d{Line(points\u003d{{-48.5, 30}, {-21, 30}},color\u003d{0, 0, 0})}","startpin":"transition1.outPort","endpin":"compositeStep11.inPort"},{"value":"\u003d{Line(points\u003d{{-49.5, -30}, {-21, -30}},color\u003d{0, 0, 0})}","startpin":"transition2.outPort","endpin":"compositeStep12.inPort"},{"value":"\u003d{Line(points\u003d{{10.5, 30}, {35, 30}},color\u003d{0, 0, 0})}","startpin":"compositeStep11.outPort","endpin":"transition3.inPort"},{"value":"\u003d{Line(points\u003d{{10.5, -30}, {35, -30}},color\u003d{0, 0, 0})}","startpin":"compositeStep12.outPort","endpin":"transition4.inPort"},{"value":"\u003d{Line(points\u003d{{-119.5, 0}, {-102.835, 0}},color\u003d{0, 0, 0})}","startpin":"initStep.outPort","endpin":"Alternative1.inPort"},{"value":"\u003d{Line(points\u003d{{90.89, 0}, {109, 0}},color\u003d{0, 0, 0})}","startpin":"Alternative1.outPort","endpin":"exitStep.inPort"},{"value":"\u003d{Line(points\u003d{{-54, 30}, {-80.155, 30}},color\u003d{0, 0, 0})}","startpin":"transition1.inPort","endpin":"Alternative1.split"},{"value":"\u003d{Line(points\u003d{{-55, -30}, {-80.155, -30}},color\u003d{0, 0, 0})}","startpin":"transition2.inPort","endpin":"Alternative1.split"},{"value":"\u003d{Line(points\u003d{{40.5, 30}, {69.155, 30}},color\u003d{0, 0, 0})}","startpin":"transition3.outPort","endpin":"Alternative1.join"},{"value":"\u003d{Line(points\u003d{{40.5, -30}, {69.155, -30}},color\u003d{0, 0, 0})}","startpin":"transition4.outPort","endpin":"Alternative1.join"}],"extendComps":[{"ID":"1255","diagramGraphic":{"graphicList":["\u003d {Rectangle(extent \u003d {{-150, 150}, {150, -150}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialCompositeStep","restriction":"model","wholeName":"Modelica.StateGraph.PartialCompositeStep","comment":"Superclass of a subgraph, i.e., a composite step that has internally a StateGraph","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-250, 160}, {250, 200}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-150, 150}, {150, -150}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{4, -115}, {145, -130}}, lineColor \u003d {0, 0, 0}, textString \u003d \"resume\"), Text(extent \u003d {{-144, -114}, {-3, -129}}, lineColor \u003d {0, 0, 0}, textString \u003d \"suspend\")}","extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[{"value":"","startpin":"outerState.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-170, 10}, {-150, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{150, 5}, {160, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]},{"ID":"1235","declarationName":"suspend","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{0, 0}, {0, 0}}, lineColor \u003d {255, 255, 255}, pattern \u003d LinePattern.None)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"CompositeStep_suspend","origin":"{-75, -155}","rotation":"270","extent":"{{-5, 5}, {5, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.CompositeStep_suspend","comment":"Output port of a step (used for suspend connector of a CompositeStep)","arrayFormList":["nSuspend"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactived","causality":"input","wholename":"Boolean"}]},{"ID":"1234","declarationName":"resume","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{0, 0}, {0, 0}}, lineColor \u003d {255, 255, 255}, pattern \u003d LinePattern.None)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"CompositeStep_resume","origin":"{75, -160}","rotation":"90","extent":"{{-10, -10}, {10, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.CompositeStep_resume","comment":"Input port of a step (used for resume connector of a CompositeStep)","arrayFormList":["nResume"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"name":"nSuspend","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of suspend ports","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"name":"nResume","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of resume ports","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[{"ID":"1247","declarationName":"transition1","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{-60, 20}, {-40, 40}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"time \u003e 8","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1245","declarationName":"initStep","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{-140, -10}, {-120, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1245","declarationName":"exitStep","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{110, -10}, {130, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1229","declarationName":"compositeStep11","diagramGraphic":{"graphicList":[],"extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"CompositeStep2","rotation":"0","extent":"{{-20, 15}, {10, 45}}","restriction":"model","wholeName":"Modelica.StateGraph.Examples.Utilities.CompositeStep2","comment":"Composite step used to demonstrate exceptions (in StateGraph.Examples.ShowExceptions)","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"\u003d{Line(points\u003d{{130.5, 0}, {155, 0}},color\u003d{0, 0, 0})}","startpin":"exitStep.outPort","endpin":"outPort"},{"value":"\u003d{Line(points\u003d{{-141, 0}, {-160, 0}},color\u003d{0, 0, 0})}","startpin":"initStep.inPort","endpin":"inPort"},{"value":"\u003d{Line(points\u003d{{-119.5, 0}, {-24, 0}},color\u003d{0, 0, 0})}","startpin":"initStep.outPort","endpin":"transition.inPort"},{"value":"\u003d{Line(points\u003d{{-18.5, 0}, {109, 0}},color\u003d{0, 0, 0})}","startpin":"transition.outPort","endpin":"exitStep.inPort"}],"extendComps":[{"ID":"1255","diagramGraphic":{"graphicList":["\u003d {Rectangle(extent \u003d {{-150, 150}, {150, -150}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialCompositeStep","restriction":"model","wholeName":"Modelica.StateGraph.PartialCompositeStep","comment":"Superclass of a subgraph, i.e., a composite step that has internally a StateGraph","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-250, 160}, {250, 200}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-150, 150}, {150, -150}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{4, -115}, {145, -130}}, lineColor \u003d {0, 0, 0}, textString \u003d \"resume\"), Text(extent \u003d {{-144, -114}, {-3, -129}}, lineColor \u003d {0, 0, 0}, textString \u003d \"suspend\")}","extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[{"value":"","startpin":"outerState.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-170, 10}, {-150, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{150, 5}, {160, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]},{"ID":"1235","declarationName":"suspend","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{0, 0}, {0, 0}}, lineColor \u003d {255, 255, 255}, pattern \u003d LinePattern.None)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"CompositeStep_suspend","origin":"{-75, -155}","rotation":"270","extent":"{{-5, 5}, {5, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.CompositeStep_suspend","comment":"Output port of a step (used for suspend connector of a CompositeStep)","arrayFormList":["nSuspend"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactived","causality":"input","wholename":"Boolean"}]},{"ID":"1234","declarationName":"resume","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{0, 0}, {0, 0}}, lineColor \u003d {255, 255, 255}, pattern \u003d LinePattern.None)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"CompositeStep_resume","origin":"{75, -160}","rotation":"90","extent":"{{-10, -10}, {10, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.CompositeStep_resume","comment":"Input port of a step (used for resume connector of a CompositeStep)","arrayFormList":["nResume"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"name":"nSuspend","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of suspend ports","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"name":"nResume","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of resume ports","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[{"ID":"1247","declarationName":"transition","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{-30, -10}, {-10, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"2","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"2","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1245","declarationName":"initStep","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{-140, -10}, {-120, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1245","declarationName":"exitStep","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{110, -10}, {130, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1259","declarationName":"waitTime","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{2, 2}"},"name":"SetRealParameter","rotation":"0","extent":"{{-80, 30}, {-50, 50}}","restriction":"type","wholeName":"Modelica.StateGraph.Temporary.SetRealParameter","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 40}, {100, -40}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {245, 245, 245}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-150, 90}, {150, 50}}, textString \u003d \"%name \u003d\"), Text(extent \u003d {{-96, 15}, {96, -15}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%value\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{2, 2}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"name":"nSuspend","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of suspend ports","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"name":"nResume","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of resume ports","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":true,"inherited":false,"name":"waitTime","type":"Real","value":"3","enumList":[],"path":"Modelica.StateGraph.Temporary.SetRealParameter","desc":"waiting time in this composite step","variability":"parameter","wholename":"Modelica.StateGraph.Temporary.SetRealParameter"}]},{"ID":"1229","declarationName":"compositeStep12","diagramGraphic":{"graphicList":[],"extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"CompositeStep2","rotation":"0","extent":"{{-20, -45}, {10, -15}}","restriction":"model","wholeName":"Modelica.StateGraph.Examples.Utilities.CompositeStep2","comment":"Composite step used to demonstrate exceptions (in StateGraph.Examples.ShowExceptions)","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"\u003d{Line(points\u003d{{130.5, 0}, {155, 0}},color\u003d{0, 0, 0})}","startpin":"exitStep.outPort","endpin":"outPort"},{"value":"\u003d{Line(points\u003d{{-141, 0}, {-160, 0}},color\u003d{0, 0, 0})}","startpin":"initStep.inPort","endpin":"inPort"},{"value":"\u003d{Line(points\u003d{{-119.5, 0}, {-24, 0}},color\u003d{0, 0, 0})}","startpin":"initStep.outPort","endpin":"transition.inPort"},{"value":"\u003d{Line(points\u003d{{-18.5, 0}, {109, 0}},color\u003d{0, 0, 0})}","startpin":"transition.outPort","endpin":"exitStep.inPort"}],"extendComps":[{"ID":"1255","diagramGraphic":{"graphicList":["\u003d {Rectangle(extent \u003d {{-150, 150}, {150, -150}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialCompositeStep","restriction":"model","wholeName":"Modelica.StateGraph.PartialCompositeStep","comment":"Superclass of a subgraph, i.e., a composite step that has internally a StateGraph","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-250, 160}, {250, 200}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-150, 150}, {150, -150}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{4, -115}, {145, -130}}, lineColor \u003d {0, 0, 0}, textString \u003d \"resume\"), Text(extent \u003d {{-144, -114}, {-3, -129}}, lineColor \u003d {0, 0, 0}, textString \u003d \"suspend\")}","extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[{"value":"","startpin":"outerState.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-170, 10}, {-150, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{150, 5}, {160, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]},{"ID":"1235","declarationName":"suspend","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{0, 0}, {0, 0}}, lineColor \u003d {255, 255, 255}, pattern \u003d LinePattern.None)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"CompositeStep_suspend","origin":"{-75, -155}","rotation":"270","extent":"{{-5, 5}, {5, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.CompositeStep_suspend","comment":"Output port of a step (used for suspend connector of a CompositeStep)","arrayFormList":["nSuspend"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactived","causality":"input","wholename":"Boolean"}]},{"ID":"1234","declarationName":"resume","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{0, 0}, {0, 0}}, lineColor \u003d {255, 255, 255}, pattern \u003d LinePattern.None)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"CompositeStep_resume","origin":"{75, -160}","rotation":"90","extent":"{{-10, -10}, {10, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.CompositeStep_resume","comment":"Input port of a step (used for resume connector of a CompositeStep)","arrayFormList":["nResume"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"name":"nSuspend","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of suspend ports","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"name":"nResume","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of resume ports","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[{"ID":"1247","declarationName":"transition","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{-30, -10}, {-10, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"2","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"2","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1245","declarationName":"initStep","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{-140, -10}, {-120, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1245","declarationName":"exitStep","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{110, -10}, {130, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1259","declarationName":"waitTime","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{2, 2}"},"name":"SetRealParameter","rotation":"0","extent":"{{-80, 30}, {-50, 50}}","restriction":"type","wholeName":"Modelica.StateGraph.Temporary.SetRealParameter","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 40}, {100, -40}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {245, 245, 245}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-150, 90}, {150, 50}}, textString \u003d \"%name \u003d\"), Text(extent \u003d {{-96, 15}, {96, -15}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%value\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{2, 2}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"name":"nSuspend","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of suspend ports","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"name":"nResume","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of resume ports","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":true,"inherited":false,"name":"waitTime","type":"Real","value":"2","enumList":[],"path":"Modelica.StateGraph.Temporary.SetRealParameter","desc":"waiting time in this composite step","variability":"parameter","wholename":"Modelica.StateGraph.Temporary.SetRealParameter"}]},{"ID":"1247","declarationName":"transition2","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{-61, -40}, {-41, -20}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"time \u003e 4","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1247","declarationName":"transition3","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{29, 20}, {49, 40}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1247","declarationName":"transition4","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{29, -40}, {49, -20}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1249","declarationName":"Alternative1","diagramGraphic":{"graphicList":[" \u003d {Line(points \u003d {{-100, 0}, {-80, 0}}, color \u003d {0, 0, 0}), Line(points \u003d {{80, 0}, {100, 0}}, color \u003d {0, 0, 0})}","\u003d{Polygon(points\u003d{{-103,1},{-100,0},{-103,-1},{-103,1}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-107,3},{-100,1}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}","\u003d{Rectangle(extent\u003d{{78,100},{80,-100}},lineColor\u003d{0, 0, 0},fillColor\u003d{175, 175, 175},fillPattern\u003dFillPattern.Solid)}","\u003d{Text(extent\u003d{{100,2},{104,1}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{100,1},{102,-1}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Rectangle(extent\u003d{{-78,-100},{-80,100}},lineColor\u003d{0, 0, 0},fillColor\u003d{175, 175, 175},fillPattern\u003dFillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Alternative","rotation":"0","extent":"{{-100, -60}, {89, 60}}","restriction":"block","wholeName":"Modelica.StateGraph.Alternative","comment":"Alternative splitting of execution path (use component between two steps)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Line(points \u003d {{-80, 100}, {80, 100}}, color \u003d {0, 0, 0}, pattern \u003d LinePattern.Dot), Line(points \u003d {{-80, -100}, {80, -100}}, color \u003d {0, 0, 0}, pattern \u003d LinePattern.Dot), Line(points \u003d {{-100, 0}, {-80, 0}}, color \u003d {0, 0, 0}), Line(points \u003d {{80, 0}, {100, 0}}, color \u003d {0, 0, 0})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-106, -3}, {-100, 3}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{100, -2}, {104, 2}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]},{"ID":"1250","declarationName":"join","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {175, 175, 175}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in_forAlternative","rotation":"0","extent":"{{78, 100}, {80, -100}}","restriction":"connector","wholeName":"Modelica.StateGraph.Alternative.Step_in_forAlternative","arrayFormList":["nBranches"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {175, 175, 175}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1251","declarationName":"split","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {175, 175, 175}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out_forAlternative","rotation":"0","extent":"{{-78, 100}, {-80, -100}}","restriction":"connector","wholeName":"Modelica.StateGraph.Alternative.Step_out_forAlternative","arrayFormList":["nBranches"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {175, 175, 175}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"1","name":"nBranches","type":"Integer","value":"2","enumList":[],"path":"Integer","desc":"Number of alternative branches","variability":"parameter","wholename":"Integer"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"name":"nSuspend","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of suspend ports","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"name":"nResume","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of resume ports","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}