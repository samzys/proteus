{"ID":"2049","diagramGraphic":{"graphicList":["\u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"false","grid":"{1, 1}"},"name":"TankController","restriction":"model","wholeName":"Modelica.Fluid.Examples.ControlledTankSystem.Utilities.TankController","comment":"Controller for tank system","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-100, 68}, {-12, 54}}, lineColor \u003d {0, 0, 0}, textString \u003d \"start\"), Text(extent \u003d {{-99, 6}, {-14, -9}}, lineColor \u003d {0, 0, 0}, textString \u003d \"stop\"), Text(extent \u003d {{-99, -54}, {-14, -69}}, lineColor \u003d {0, 0, 0}, textString \u003d \"shut\"), Text(extent \u003d {{-94, -82}, {-9, -96}}, lineColor \u003d {0, 0, 0}, textString \u003d \"level1\"), Text(extent \u003d {{11, -83}, {96, -98}}, lineColor \u003d {0, 0, 0}, textString \u003d \"level2\"), Text(extent \u003d {{10, 68}, {99, 54}}, lineColor \u003d {0, 0, 0}, textString \u003d \"valve1\"), Text(extent \u003d {{7, 10}, {101, -5}}, lineColor \u003d {0, 0, 0}, textString \u003d \"valve2\"), Text(extent \u003d {{2, -51}, {102, -67}}, lineColor \u003d {0, 0, 0}, textString \u003d \"valve3\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"false","grid":"{1, 1}"}],"connects":[{"value":"\u003d{Line(points\u003d{{-51.5, 40}, {-44, 40}},color\u003d{0, 0, 0})}","startpin":"s1.outPort","endpin":"T1.inPort"},{"value":"\u003d{Line(points\u003d{{-38.5, 40}, {-21.3333, 40}},color\u003d{0, 0, 0})}","startpin":"T1.outPort","endpin":"normal.inPort"},{"value":"\u003d{Line(points\u003d{{20.6667, 40}, {33, 40}},color\u003d{0, 0, 0})}","startpin":"normal.outPort","endpin":"T2.inPort"},{"value":"\u003d{Line(points\u003d{{5.5, -50}, {19, -50}},color\u003d{0, 0, 0})}","startpin":"T5.outPort","endpin":"emptyTanks.inPort"},{"value":"\u003d{Line(points\u003d{{40.5, -50}, {51, -50}},color\u003d{0, 0, 0})}","startpin":"emptyTanks.outPort","endpin":"T6.inPort"},{"value":"\u003d{Line(points\u003d{{83, 82.5}, {90, 82.5}, {90, 60}, {105, 60}},color\u003d{255, 0, 255})}","startpin":"setValve1.y","endpin":"valve1"},{"value":"\u003d{Line(points\u003d{{86, -74.5}, {90, -74.5}, {90, 0}, {105, 0}},color\u003d{255, 0, 255})}","startpin":"setValve2.y","endpin":"valve2"},{"value":"\u003d{Line(points\u003d{{86, -93}, {95, -93}, {95, -60}, {105, -60}},color\u003d{255, 0, 255})}","startpin":"setValve3.y","endpin":"valve3"},{"value":"\u003d{Line(points\u003d{{-10, 19.3333}, {-10, 12}, {-23, 12}, {-23, 3}},color\u003d{0, 0, 0})}","startpin":"normal.suspend","endpin":"T3.inPort"},{"value":"\u003d{Line(points\u003d{{-23, -2.5}, {-23, -20}, {-60, -20}, {-60, -50}, {-51, -50}},color\u003d{0, 0, 0})}","startpin":"T3.outPort","endpin":"s2.inPort"},{"value":"\u003d{Line(points\u003d{{-60, -110}, {-60, -80}, {-80, -80}, {-80, 20}, {-30, 20}, {-30, 24}, {-22.6667, 24}},color\u003d{0, 0, 255})}","startpin":"level1","endpin":"normal.level1"},{"value":"\u003d{Line(points\u003d{{-29.5, -49.75}, {-30, -49.75}, {-30, -50}, {0, -50}},color\u003d{0, 0, 0})}","startpin":"s2.outPort","endpin":"T5.inPort"},{"value":"\u003d{Line(points\u003d{{-29.5, -50.25}, {-29, -50}, {-8, -50}, {-8, -25}, {10, -25}, {10, -4}},color\u003d{0, 0, 0})}","startpin":"s2.outPort","endpin":"T4.inPort"},{"value":"\u003d{Line(points\u003d{{38.5, 40}, {70, 40}, {70, 70}, {-80, 70}, {-80, 40}, {-73, 40}, {-73, 40.5}},color\u003d{0, 0, 0})}","startpin":"T2.outPort","endpin":"s1.inPort"},{"value":"\u003d{Line(points\u003d{{56.5, -50}, {70, -50}, {70, 70}, {-80, 70}, {-80, 40}, {-74, 40}, {-73, 39.5}},color\u003d{0, 0, 0})}","startpin":"T6.outPort","endpin":"s1.inPort"},{"value":"\u003d{Line(points\u003d{{10, 1.5}, {10, 10}, {10.5, 10}, {10.5, 18.6667}, {10, 18.6667}},color\u003d{0, 0, 0})}","startpin":"T4.outPort","endpin":"normal.resume"}],"extendComps":[{"ID":"1241","diagramGraphic":{"graphicList":[]},"name":"PartialStateGraphIcon","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStateGraphIcon","comment":"Icon for a StateGraph object","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{160, 110}, {-160, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"1243","declarationName":"s1","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}), Rectangle(extent \u003d {{-80, 80}, {80, -80}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"InitialStep","rotation":"0","extent":"{{-72, 30}, {-52, 50}}","restriction":"block","wholeName":"Modelica.StateGraph.InitialStep","comment":"Initial step (\u003d step that is active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-80, 80}, {80, -80}}, lineColor \u003d {0, 0, 0})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"2","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"2","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"2050","declarationName":"normal","diagramGraphic":{"graphicList":[],"extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true"},"name":"NormalOperation","rotation":"0","extent":"{{-20, 20}, {20, 60}}","restriction":"model","wholeName":"Modelica.Fluid.Examples.ControlledTankSystem.Utilities.NormalOperation","comment":"Normal operation of tank system (button start pressed)","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"\u003d{Line(points\u003d{{-141, 0}, {-160, 0}},color\u003d{0, 0, 0})}","startpin":"fillTank1.inPort","endpin":"inPort"},{"value":"\u003d{Line(points\u003d{{-119.5, 0}, {-104, 0}},color\u003d{0, 0, 0})}","startpin":"fillTank1.outPort","endpin":"T1.inPort"},{"value":"\u003d{Line(points\u003d{{10.5, 0}, {26, 0}},color\u003d{0, 0, 0})}","startpin":"fillTank2.outPort","endpin":"T3.inPort"},{"value":"\u003d{Line(points\u003d{{140.5, 0}, {155, 0}},color\u003d{0, 0, 0})}","startpin":"emptyTank2.outPort","endpin":"outPort"},{"value":"\u003d{Line(points\u003d{{-59.5, 0}, {-44, 0}},color\u003d{0, 0, 0})}","startpin":"wait1.outPort","endpin":"T2.inPort"},{"value":"\u003d{Line(points\u003d{{-38.5, 0}, {-11, 0}},color\u003d{0, 0, 0})}","startpin":"T2.outPort","endpin":"fillTank2.inPort"},{"value":"\u003d{Line(points\u003d{{-98.5, 0}, {-81, 0}},color\u003d{0, 0, 0})}","startpin":"T1.outPort","endpin":"wait1.inPort"},{"value":"\u003d{Line(points\u003d{{74.5, 0}, {88, 0}},color\u003d{0, 0, 0})}","startpin":"wait2.outPort","endpin":"T4.inPort"},{"value":"\u003d{Line(points\u003d{{31.5, 0}, {53, 0}},color\u003d{0, 0, 0})}","startpin":"T3.outPort","endpin":"wait2.inPort"},{"value":"\u003d{Line(points\u003d{{93.5, 0}, {119, 0}},color\u003d{0, 0, 0})}","startpin":"T4.outPort","endpin":"emptyTank2.inPort"}],"extendComps":[{"ID":"1255","diagramGraphic":{"graphicList":["\u003d {Rectangle(extent \u003d {{-150, 150}, {150, -150}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialCompositeStep","restriction":"model","wholeName":"Modelica.StateGraph.PartialCompositeStep","comment":"Superclass of a subgraph, i.e., a composite step that has internally a StateGraph","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-250, 160}, {250, 200}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-150, 150}, {150, -150}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{4, -115}, {145, -130}}, lineColor \u003d {0, 0, 0}, textString \u003d \"resume\"), Text(extent \u003d {{-144, -114}, {-3, -129}}, lineColor \u003d {0, 0, 0}, textString \u003d \"suspend\")}","extent":"{{-150, -150}, {150, 150}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[{"value":"","startpin":"outerState.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-170, 10}, {-150, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{150, 5}, {160, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]},{"ID":"1235","declarationName":"suspend","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{0, 0}, {0, 0}}, lineColor \u003d {255, 255, 255}, pattern \u003d LinePattern.None)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"CompositeStep_suspend","origin":"{-75, -155}","rotation":"270","extent":"{{-5, 5}, {5, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.CompositeStep_suspend","comment":"Output port of a step (used for suspend connector of a CompositeStep)","arrayFormList":["nSuspend"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactived","causality":"input","wholename":"Boolean"}]},{"ID":"1234","declarationName":"resume","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{0, 0}, {0, 0}}, lineColor \u003d {255, 255, 255}, pattern \u003d LinePattern.None)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"CompositeStep_resume","origin":"{75, -160}","rotation":"90","extent":"{{-10, -10}, {10, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.CompositeStep_resume","comment":"Input port of a step (used for resume connector of a CompositeStep)","arrayFormList":["nResume"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"name":"nSuspend","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of suspend ports","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"name":"nResume","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of resume ports","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[{"ID":"59","declarationName":"level1","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealInput","rotation":"0","extent":"{{-190, -140}, {-150, -100}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1245","declarationName":"fillTank1","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{-140, -10}, {-120, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1247","declarationName":"T1","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{-110, -10}, {-90, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"level1 \u003e maxLevel","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1245","declarationName":"fillTank2","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{-10, -10}, {10, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1247","declarationName":"T3","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{20, -10}, {40, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"level1 \u003c minLevel","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1245","declarationName":"emptyTank2","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{120, -10}, {140, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1245","declarationName":"wait1","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{-80, -10}, {-60, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1247","declarationName":"T2","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1245","declarationName":"wait2","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{54, -10}, {74, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1247","declarationName":"T4","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{82, -10}, {102, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"name":"nSuspend","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of suspend ports","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"name":"nResume","type":"Integer","value":"1","enumList":[],"annotationGroup":"\"Exception connections\"","path":"Integer","desc":"Number of resume ports","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"maxLevel","quantity":"Length","type":"Real","unit":"m","enumList":[],"path":"Modelica.SIunits.Height","desc":"Fill level of tank 1","variability":"parameter","wholename":"Modelica.SIunits.Height"},{"header":true,"inherited":false,"min":"0","name":"minLevel","quantity":"Length","type":"Real","unit":"m","enumList":[],"path":"Modelica.SIunits.Height","desc":"Lowest level of tank 1 and 2","variability":"parameter","wholename":"Modelica.SIunits.Height"},{"header":true,"inherited":false,"name":"waitTime","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"Wait time between operations","variability":"parameter","wholename":"Modelica.SIunits.Time"}]},{"ID":"1247","declarationName":"T1","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{-50, 50}, {-30, 30}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"start","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1247","declarationName":"T2","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{27, 50}, {47, 30}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"level2 \u003c minLevel","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1247","declarationName":"T3","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","origin":"{-23, -1}","rotation":"270","extent":"{{-10, -10}, {10, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"stop","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1245","declarationName":"s2","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{-50, -60}, {-30, -40}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"2","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"2","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1247","declarationName":"T4","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","origin":"{10, 0}","rotation":"90","extent":"{{-10, -10}, {10, 10}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"start","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1247","declarationName":"T5","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{-6, -60}, {14, -40}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"shut","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1245","declarationName":"emptyTanks","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{20, -60}, {40, -40}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1247","declarationName":"T6","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{45, -60}, {65, -40}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"0","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"level1 \u003c minLevel and level2 \u003c minLevel","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"61","declarationName":"start","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanInput","rotation":"0","extent":"{{-120, 50}, {-100, 70}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"61","declarationName":"stop","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanInput","rotation":"0","extent":"{{-120, -10}, {-100, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"61","declarationName":"shut","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanInput","rotation":"0","extent":"{{-120, -70}, {-100, -50}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"59","declarationName":"level1","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealInput","origin":"{-60, -110}","rotation":"90","extent":"{{-10, -10}, {10, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"59","declarationName":"level2","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealInput","origin":"{60, -110}","rotation":"90","extent":"{{-10, -10}, {10, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"62","declarationName":"valve1","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, 55}, {110, 65}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"62","declarationName":"valve2","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -5}, {110, 5}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"62","declarationName":"valve3","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -65}, {110, -55}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"228","declarationName":"setValve1","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{2, 2}"},"name":"BooleanExpression","rotation":"0","extent":"{{20, 73}, {80, 92}}","restriction":"block","wholeName":"Modelica.Blocks.Sources.BooleanExpression","comment":"Set output signal to a time varying Boolean expression","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 40}, {100, -40}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {235, 235, 235}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-96, 15}, {96, -15}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%y\"), Text(extent \u003d {{-150, 90}, {140, 50}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Polygon(points \u003d {{100, 10}, {120, 0}, {100, -10}, {100, 10}}, lineColor \u003d DynamicSelect({255, 0, 255}, if y \u003e 0.5 then {0, 255, 0} else {255, 0, 255}), fillColor \u003d DynamicSelect({255, 255, 255}, if y \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"false","grid":"{2, 2}"}],"connects":[],"extendComps":[],"includeComps":[{"ID":"62","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]},{"ID":"228","declarationName":"setValve2","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{2, 2}"},"name":"BooleanExpression","rotation":"0","extent":"{{-40, -85}, {80, -64}}","restriction":"block","wholeName":"Modelica.Blocks.Sources.BooleanExpression","comment":"Set output signal to a time varying Boolean expression","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 40}, {100, -40}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {235, 235, 235}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-96, 15}, {96, -15}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%y\"), Text(extent \u003d {{-150, 90}, {140, 50}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Polygon(points \u003d {{100, 10}, {120, 0}, {100, -10}, {100, 10}}, lineColor \u003d DynamicSelect({255, 0, 255}, if y \u003e 0.5 then {0, 255, 0} else {255, 0, 255}), fillColor \u003d DynamicSelect({255, 255, 255}, if y \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"false","grid":"{2, 2}"}],"connects":[],"extendComps":[],"includeComps":[{"ID":"62","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]},{"ID":"228","declarationName":"setValve3","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{2, 2}"},"name":"BooleanExpression","rotation":"0","extent":"{{-40, -103}, {80, -83}}","restriction":"block","wholeName":"Modelica.Blocks.Sources.BooleanExpression","comment":"Set output signal to a time varying Boolean expression","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 40}, {100, -40}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {235, 235, 235}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-96, 15}, {96, -15}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%y\"), Text(extent \u003d {{-150, 90}, {140, 50}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Polygon(points \u003d {{100, 10}, {120, 0}, {100, -10}, {100, 10}}, lineColor \u003d DynamicSelect({255, 0, 255}, if y \u003e 0.5 then {0, 255, 0} else {255, 0, 255}), fillColor \u003d DynamicSelect({255, 255, 255}, if y \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"false","grid":"{2, 2}"}],"connects":[],"extendComps":[],"includeComps":[{"ID":"62","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"maxLevel","quantity":"Length","type":"Real","unit":"m","enumList":[],"path":"Modelica.SIunits.Height","desc":"Fill level of tank 1","variability":"parameter","wholename":"Modelica.SIunits.Height"},{"header":true,"inherited":false,"min":"0","name":"minLevel","quantity":"Length","type":"Real","unit":"m","enumList":[],"path":"Modelica.SIunits.Height","desc":"Lowest level of tank 1 and 2","variability":"parameter","wholename":"Modelica.SIunits.Height"},{"header":true,"inherited":false,"name":"waitTime","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"Wait time, between operations","variability":"parameter","wholename":"Modelica.SIunits.Time"}]}