{"ID":"212","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{0, 0, 127},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{0, 0, 127},textString\u003d\"y\")}","\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{0, 0, 127},fillColor\u003d{0, 0, 127},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{0, 0, 127},textString\u003d\"u\")}","\u003d{Polygon(points\u003d{{-10,-120},{0,-100},{10,-120},{-10,-120}},lineColor\u003d{255, 127, 0},fillColor\u003d{255, 127, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-2,-103},{-2,-108}},lineColor\u003d{255, 127, 0},textString\u003d\"index\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Extractor","restriction":"block","wholeName":"Modelica.Blocks.Routing.Extractor","comment":"Extract scalar signal out of signal vector dependent on IntegerRealInput index","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-80, 50}, {-40, -50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Polygon(points \u003d {{-84.4104, 1.9079}, {-84.4104, -2.09208}, {-80.4104, -0.09208}, {-84.4104, 1.9079}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-62, 2}, {-50.1395, 12.907}, {-39.1395, 12.907}}, color \u003d {0, 0, 127}), Line(points \u003d {{-63, 4}, {-49, 40}, {-39, 40}}, color \u003d {0, 0, 127}), Line(points \u003d {{-102, 0}, {-65.0373, -0.01802}}, color \u003d {0, 0, 127}), Ellipse(extent \u003d {{-70.0437, 4.5925}, {-60.0437, -4.90745}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-63, -5}, {-50, -40}, {-39, -40}}, color \u003d {0, 0, 127}), Line(points \u003d {{-62, -2}, {-50.0698, -12.907}, {-39.0698, -12.907}}, color \u003d {0, 0, 127}), Polygon(points \u003d {{-38.8808, -11}, {-38.8808, -15}, {-34.8808, -13}, {-38.8808, -11}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Polygon(points \u003d {{-39, 42}, {-39, 38}, {-35, 40}, {-39, 42}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Polygon(points \u003d {{-38.8728, -38.0295}, {-38.8728, -42.0295}, {-34.8728, -40.0295}, {-38.8728, -38.0295}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Polygon(points \u003d {{-38.9983, 14.8801}, {-38.9983, 10.8801}, {-34.9983, 12.8801}, {-38.9983, 14.8801}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-30, 50}, {30, -50}}, fillColor \u003d {235, 235, 235}, fillPattern \u003d FillPattern.Solid, lineColor \u003d {0, 0, 127}), Line(points \u003d {{100, 0}, {0, 0}}, color \u003d {0, 0, 127}), Line(points \u003d {{0, 2}, {0, -104}}, color \u003d {255, 128, 0}), Line(points \u003d {{-35, 40}, {-20, 40}}, color \u003d {0, 0, 127}), Line(points \u003d {{-35, 13}, {-20, 13}}, color \u003d {0, 0, 127}), Line(points \u003d {{-35, -13}, {-20, -13}}, color \u003d {0, 0, 127}), Line(points \u003d {{-35, -40}, {-20, -40}}, color \u003d {0, 0, 127}), Polygon(points \u003d {{0, 0}, {-20, 13}, {-20, 13}, {0, 0}, {0, 0}}, lineColor \u003d {0, 0, 127}), Ellipse(extent \u003d {{-6, 6}, {6, -6}}, lineColor \u003d {255, 128, 0}, fillColor \u003d {255, 128, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"71","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{0, 0, 127},fillColor\u003d{0, 0, 127},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{0, 0, 127},textString\u003d\"u\")}","\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{0, 0, 127},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{0, 0, 127},textString\u003d\"y\")}"]},"name":"MISO","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.MISO","comment":"Multiple Input Single Output continuous control block","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[{"ID":"65","diagramGraphic":{"graphicList":[]},"name":"BlockIcon","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.BlockIcon","comment":"Basic graphical layout of input/output block","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, -100}, {100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-150, 150}, {150, 110}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"59","declarationName":"u","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealInput","rotation":"0","extent":"{{-140, -20}, {-100, 20}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealInput","arrayFormList":["nin"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"60","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"name":"nin","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of inputs","variability":"parameter","wholename":"Integer"}]}],"includeComps":[{"ID":"63","declarationName":"index","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 127, 0}, fillColor \u003d {255, 127, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 127, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"IntegerInput","origin":"{0, -120}","rotation":"90","extent":"{{-20, -20}, {20, 20}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.IntegerInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 127, 0}, fillColor \u003d {255, 127, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"name":"nin","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of inputs","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"name":"allowOutOfRange","type":"Boolean","value":"false","enumList":[],"path":"Boolean","desc":"Index may be out of range","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"name":"outOfRangeValue","type":"Real","value":"1e10","enumList":[],"path":"Real","desc":"Output signal if index is out of range","variability":"parameter","wholename":"Real"}]}