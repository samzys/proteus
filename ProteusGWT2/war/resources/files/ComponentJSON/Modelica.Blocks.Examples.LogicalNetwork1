{"ID":"31","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"false"},"name":"LogicalNetwork1","restriction":"model","wholeName":"Modelica.Blocks.Examples.LogicalNetwork1","comment":"Demonstrates the usage of logical blocks","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"\u003d{Line(points\u003d{{-59, -10}, {-42, -10}},color\u003d{255, 0, 255})}","startpin":"table2.y","endpin":"Not1.u"},{"value":"\u003d{Line(points\u003d{{21, -10}, {28, -10}, {28, 22}, {38, 22}},color\u003d{255, 0, 255})}","startpin":"And1.y","endpin":"Or1.u2"},{"value":"\u003d{Line(points\u003d{{-59, 30}, {38, 30}},color\u003d{255, 0, 255})}","startpin":"table1.y","endpin":"Or1.u1"},{"value":"\u003d{Line(points\u003d{{-19, -10}, {-2, -10}},color\u003d{255, 0, 255})}","startpin":"Not1.y","endpin":"And1.u1"},{"value":"\u003d{Line(points\u003d{{-19, -50}, {-10, -50}, {-10, -18}, {-2, -18}},color\u003d{255, 0, 255})}","startpin":"Pre1.y","endpin":"And1.u2"},{"value":"\u003d{Line(points\u003d{{61, 30}, {68, 30}, {68, -70}, {-60, -70}, {-60, -50}, {-42, -50}},color\u003d{255, 0, 255})}","startpin":"Or1.y","endpin":"Pre1.u"}],"extendComps":[{"ID":"592","diagramGraphic":{"graphicList":[]},"name":"Example","restriction":"model","wholeName":"Modelica.Icons.Example","comment":"Icon for an example model","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, -100}, {80, 50}}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid, lineColor \u003d {0, 0, 255}), Polygon(points \u003d {{-100, 50}, {-80, 70}, {100, 70}, {80, 50}, {-100, 50}}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid, lineColor \u003d {0, 0, 255}), Polygon(points \u003d {{100, 70}, {100, -80}, {80, -100}, {80, 50}, {100, 70}}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid, lineColor \u003d {0, 0, 255}), Text(extent \u003d {{-96, 3}, {77, -49}}, lineColor \u003d {0, 0, 255}, textString \u003d \"Example\"), Text(extent \u003d {{-120, 132}, {120, 73}}, lineColor \u003d {255, 0, 0}, textString \u003d \"%name\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"255","declarationName":"table2","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-70, 92}, {-76, 70}, {-64, 70}, {-70, 92}}, lineColor \u003d {95, 95, 95}, fillColor \u003d {95, 95, 95}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-70, 70}, {-70, -88}}, color \u003d {95, 95, 95}), Line(points \u003d {{-90, -70}, {68, -70}}, color \u003d {95, 95, 95}), Polygon(points \u003d {{90, -70}, {68, -64}, {68, -76}, {90, -70}}, lineColor \u003d {95, 95, 95}, fillColor \u003d {95, 95, 95}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{54, -80}, {106, -92}}, lineColor \u003d {0, 0, 0}, textString \u003d \"time\"), Text(extent \u003d {{-64, 92}, {-46, 74}}, lineColor \u003d {0, 0, 0}, textString \u003d \"y\")}"," \u003d {Rectangle(extent \u003d {{-34, 66}, {16, -54}}, lineColor \u003d {255, 255, 255}, fillColor \u003d {192, 192, 192}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-34, -54}, {-34, 66}, {16, 66}, {16, -54}, {-34, -54}, {-34, -24}, {16, -24}, {16, 6}, {-34, 6}, {-34, 36}, {16, 36}, {16, 66}, {16, 66}, {16, -55}}, color \u003d {0, 0, 0}), Text(extent \u003d {{-29, 59}, {10, 44}}, lineColor \u003d {0, 0, 0}, textString \u003d \"time\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"BooleanTable","rotation":"0","extent":"{{-80, -20}, {-60, 0}}","restriction":"block","wholeName":"Modelica.Blocks.Sources.BooleanTable","comment":"Generate a Boolean output signal based on a vector of time instants","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-18, 70}, {32, -50}}, lineColor \u003d {255, 255, 255}, fillColor \u003d {192, 192, 192}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-18, -50}, {-18, 70}, {32, 70}, {32, -50}, {-18, -50}, {-18, -20}, {32, -20}, {32, 10}, {-18, 10}, {-18, 40}, {32, 40}, {32, 70}, {32, 70}, {32, -51}}, color \u003d {0, 0, 0})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"103","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-70, 92}, {-76, 70}, {-64, 70}, {-70, 92}}, lineColor \u003d {95, 95, 95}, fillColor \u003d {95, 95, 95}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-70, 70}, {-70, -88}}, color \u003d {95, 95, 95}), Line(points \u003d {{-90, -70}, {68, -70}}, color \u003d {95, 95, 95}), Polygon(points \u003d {{90, -70}, {68, -64}, {68, -76}, {90, -70}}, lineColor \u003d {95, 95, 95}, fillColor \u003d {95, 95, 95}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{54, -80}, {106, -92}}, lineColor \u003d {0, 0, 0}, textString \u003d \"time\"), Text(extent \u003d {{-64, 92}, {-46, 74}}, lineColor \u003d {0, 0, 0}, textString \u003d \"y\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"partialBooleanSource","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanSource","comment":"Partial source block (has 1 output Boolean signal and an appropriate default icon)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-80, 88}, {-88, 66}, {-72, 66}, {-80, 88}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-80, 66}, {-80, -82}}, color \u003d {255, 0, 255}), Line(points \u003d {{-90, -70}, {72, -70}}, color \u003d {255, 0, 255}), Polygon(points \u003d {{90, -70}, {68, -62}, {68, -78}, {90, -70}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Ellipse(extent \u003d {{71, 7}, {85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"97","diagramGraphic":{"graphicList":[]},"name":"partialBooleanBlockIcon","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanBlockIcon","comment":"Basic graphical layout of logical block","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {210, 210, 210}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-150, 150}, {150, 110}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"62","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"name":"startValue","type":"Boolean","value":"false","enumList":[],"path":"Boolean","desc":"Start value of y. At time \u003d table[1], y changes to \u0027not startValue\u0027","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"name":"table","quantity":"Time","type":"Real","unit":"s","value":"{1, 3, 5, 7}","enumList":[],"path":"Modelica.SIunits.Time","desc":"Vector of time points. At every time point, the output y gets its opposite value (e.g. table\u003d{0,1})","variability":"parameter","wholename":"Modelica.SIunits.Time"}]},{"ID":"255","declarationName":"table1","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-70, 92}, {-76, 70}, {-64, 70}, {-70, 92}}, lineColor \u003d {95, 95, 95}, fillColor \u003d {95, 95, 95}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-70, 70}, {-70, -88}}, color \u003d {95, 95, 95}), Line(points \u003d {{-90, -70}, {68, -70}}, color \u003d {95, 95, 95}), Polygon(points \u003d {{90, -70}, {68, -64}, {68, -76}, {90, -70}}, lineColor \u003d {95, 95, 95}, fillColor \u003d {95, 95, 95}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{54, -80}, {106, -92}}, lineColor \u003d {0, 0, 0}, textString \u003d \"time\"), Text(extent \u003d {{-64, 92}, {-46, 74}}, lineColor \u003d {0, 0, 0}, textString \u003d \"y\")}"," \u003d {Rectangle(extent \u003d {{-34, 66}, {16, -54}}, lineColor \u003d {255, 255, 255}, fillColor \u003d {192, 192, 192}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-34, -54}, {-34, 66}, {16, 66}, {16, -54}, {-34, -54}, {-34, -24}, {16, -24}, {16, 6}, {-34, 6}, {-34, 36}, {16, 36}, {16, 66}, {16, 66}, {16, -55}}, color \u003d {0, 0, 0}), Text(extent \u003d {{-29, 59}, {10, 44}}, lineColor \u003d {0, 0, 0}, textString \u003d \"time\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"BooleanTable","rotation":"0","extent":"{{-80, 20}, {-60, 40}}","restriction":"block","wholeName":"Modelica.Blocks.Sources.BooleanTable","comment":"Generate a Boolean output signal based on a vector of time instants","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-18, 70}, {32, -50}}, lineColor \u003d {255, 255, 255}, fillColor \u003d {192, 192, 192}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-18, -50}, {-18, 70}, {32, 70}, {32, -50}, {-18, -50}, {-18, -20}, {32, -20}, {32, 10}, {-18, 10}, {-18, 40}, {32, 40}, {32, 70}, {32, 70}, {32, -51}}, color \u003d {0, 0, 0})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"103","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-70, 92}, {-76, 70}, {-64, 70}, {-70, 92}}, lineColor \u003d {95, 95, 95}, fillColor \u003d {95, 95, 95}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-70, 70}, {-70, -88}}, color \u003d {95, 95, 95}), Line(points \u003d {{-90, -70}, {68, -70}}, color \u003d {95, 95, 95}), Polygon(points \u003d {{90, -70}, {68, -64}, {68, -76}, {90, -70}}, lineColor \u003d {95, 95, 95}, fillColor \u003d {95, 95, 95}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{54, -80}, {106, -92}}, lineColor \u003d {0, 0, 0}, textString \u003d \"time\"), Text(extent \u003d {{-64, 92}, {-46, 74}}, lineColor \u003d {0, 0, 0}, textString \u003d \"y\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"partialBooleanSource","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanSource","comment":"Partial source block (has 1 output Boolean signal and an appropriate default icon)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-80, 88}, {-88, 66}, {-72, 66}, {-80, 88}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-80, 66}, {-80, -82}}, color \u003d {255, 0, 255}), Line(points \u003d {{-90, -70}, {72, -70}}, color \u003d {255, 0, 255}), Polygon(points \u003d {{90, -70}, {68, -62}, {68, -78}, {90, -70}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Ellipse(extent \u003d {{71, 7}, {85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"97","diagramGraphic":{"graphicList":[]},"name":"partialBooleanBlockIcon","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanBlockIcon","comment":"Basic graphical layout of logical block","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {210, 210, 210}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-150, 150}, {150, 110}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"62","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"name":"startValue","type":"Boolean","value":"false","enumList":[],"path":"Boolean","desc":"Start value of y. At time \u003d table[1], y changes to \u0027not startValue\u0027","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"name":"table","quantity":"Time","type":"Real","unit":"s","value":"{2, 4, 6, 8}","enumList":[],"path":"Modelica.SIunits.Time","desc":"Vector of time points. At every time point, the output y gets its opposite value (e.g. table\u003d{0,1})","variability":"parameter","wholename":"Modelica.SIunits.Time"}]},{"ID":"118","declarationName":"Not1","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}","\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{255, 0, 255},textString\u003d\"u\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"Not","rotation":"0","extent":"{{-40, -20}, {-20, 0}}","restriction":"model","wholeName":"Modelica.Blocks.Logical.Not","comment":"Logical \u0027not\u0027: y \u003d not u","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-90, 40}, {90, -40}}, lineColor \u003d {0, 0, 0}, textString \u003d \"not\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"98","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{255, 0, 255},textString\u003d\"u\")}","\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}"]},"name":"partialBooleanSISO","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanSISO","comment":"Partial block with 1 input and 1 output Boolean signal","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Ellipse(extent \u003d {{-71, 7}, {-85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if u \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if u \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid), Ellipse(extent \u003d {{71, 7}, {85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"97","diagramGraphic":{"graphicList":[]},"name":"partialBooleanBlockIcon","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanBlockIcon","comment":"Basic graphical layout of logical block","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {210, 210, 210}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-150, 150}, {150, 110}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"61","declarationName":"u","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanInput","rotation":"0","extent":"{{-140, -20}, {-100, 20}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"62","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]}],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"113","declarationName":"And1","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{255, 0, 255},textString\u003d\"u1\")}","\u003d{Polygon(points\u003d{{-120,-70},{-100,-80},{-120,-90},{-120,-70}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,-63},{-122,-68}},lineColor\u003d{255, 0, 255},textString\u003d\"u2\")}","\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"false"},"name":"And","rotation":"0","extent":"{{0, -20}, {20, 0}}","restriction":"model","wholeName":"Modelica.Blocks.Logical.And","comment":"Logical \u0027and\u0027: y \u003d u1 and u2","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-90, 40}, {90, -40}}, lineColor \u003d {0, 0, 0}, textString \u003d \"and\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"99","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{-120,-70},{-100,-80},{-120,-90},{-120,-70}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,-63},{-122,-68}},lineColor\u003d{255, 0, 255},textString\u003d\"u2\")}","\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{255, 0, 255},textString\u003d\"u1\")}","\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}"]},"name":"partialBooleanSI2SO","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanSI2SO","comment":"Partial block with 2 input and 1 output Boolean signal","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Ellipse(extent \u003d {{-71, 7}, {-85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if u1 \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if u1 \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid), Ellipse(extent \u003d {{-71, -74}, {-85, -88}}, lineColor \u003d DynamicSelect({235, 235, 235}, if u2 \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if u2 \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid), Ellipse(extent \u003d {{71, 7}, {85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"97","diagramGraphic":{"graphicList":[]},"name":"partialBooleanBlockIcon","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanBlockIcon","comment":"Basic graphical layout of logical block","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {210, 210, 210}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-150, 150}, {150, 110}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"61","declarationName":"u1","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanInput","rotation":"0","extent":"{{-140, -20}, {-100, 20}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"61","declarationName":"u2","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanInput","rotation":"0","extent":"{{-140, -100}, {-100, -60}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"62","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]}],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"114","declarationName":"Or1","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{-120,-70},{-100,-80},{-120,-90},{-120,-70}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,-63},{-122,-68}},lineColor\u003d{255, 0, 255},textString\u003d\"u2\")}","\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{255, 0, 255},textString\u003d\"u1\")}","\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"false"},"name":"Or","rotation":"0","extent":"{{40, 20}, {60, 40}}","restriction":"model","wholeName":"Modelica.Blocks.Logical.Or","comment":"Logical \u0027or\u0027: y \u003d u1 or u2","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-90, 40}, {90, -40}}, lineColor \u003d {0, 0, 0}, textString \u003d \"or\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"99","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{-120,-70},{-100,-80},{-120,-90},{-120,-70}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,-63},{-122,-68}},lineColor\u003d{255, 0, 255},textString\u003d\"u2\")}","\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{255, 0, 255},textString\u003d\"u1\")}","\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}"]},"name":"partialBooleanSI2SO","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanSI2SO","comment":"Partial block with 2 input and 1 output Boolean signal","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Ellipse(extent \u003d {{-71, 7}, {-85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if u1 \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if u1 \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid), Ellipse(extent \u003d {{-71, -74}, {-85, -88}}, lineColor \u003d DynamicSelect({235, 235, 235}, if u2 \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if u2 \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid), Ellipse(extent \u003d {{71, 7}, {85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"97","diagramGraphic":{"graphicList":[]},"name":"partialBooleanBlockIcon","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanBlockIcon","comment":"Basic graphical layout of logical block","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {210, 210, 210}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-150, 150}, {150, 110}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"61","declarationName":"u1","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanInput","rotation":"0","extent":"{{-140, -20}, {-100, 20}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"61","declarationName":"u2","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanInput","rotation":"0","extent":"{{-140, -100}, {-100, -60}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"62","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]}],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"119","declarationName":"Pre1","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}","\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{255, 0, 255},textString\u003d\"u\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"Pre","rotation":"0","extent":"{{-40, -60}, {-20, -40}}","restriction":"model","wholeName":"Modelica.Blocks.Logical.Pre","comment":"Breaks algebraic loops by an infinitesimal small time delay (y \u003d pre(u): event iteration continues until u \u003d pre(u))","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-90, 40}, {90, -40}}, lineColor \u003d {0, 0, 0}, textString \u003d \"pre\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"98","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 0, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{255, 0, 255},textString\u003d\"u\")}","\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{255, 0, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{255, 0, 255},textString\u003d\"y\")}"]},"name":"partialBooleanSISO","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanSISO","comment":"Partial block with 1 input and 1 output Boolean signal","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Ellipse(extent \u003d {{-71, 7}, {-85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if u \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if u \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid), Ellipse(extent \u003d {{71, 7}, {85, -7}}, lineColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillColor \u003d DynamicSelect({235, 235, 235}, if y \u003e 0.5 then {0, 255, 0} else {235, 235, 235}), fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"97","diagramGraphic":{"graphicList":[]},"name":"partialBooleanBlockIcon","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.partialBooleanBlockIcon","comment":"Basic graphical layout of logical block","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {210, 210, 210}, fillPattern \u003d FillPattern.Solid, borderPattern \u003d BorderPattern.Raised), Text(extent \u003d {{-150, 150}, {150, 110}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"61","declarationName":"u","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanInput","rotation":"0","extent":"{{-140, -20}, {-100, 20}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 0, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"62","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {255, 0, 255}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"BooleanOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.BooleanOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {255, 0, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"name":"pre_u_start","type":"Boolean","value":"false","enumList":[],"path":"Boolean","desc":"Start value of pre(u) at initial time","variability":"parameter","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[]}