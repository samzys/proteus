{"ID":"265","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-60, 60}, {60, -60}}, fillColor \u003d {235, 235, 235}, fillPattern \u003d FillPattern.Solid, lineColor \u003d {0, 0, 255}), Line(points \u003d {{60, 0}, {100, 0}}, color \u003d {0, 0, 255}), Text(extent \u003d {{-100, 100}, {100, 64}}, textString \u003d \"2 dimensional linear table interpolation\", lineColor \u003d {0, 0, 255}), Line(points \u003d {{-54, 40}, {-54, -40}, {54, -40}, {54, 40}, {28, 40}, {28, -40}, {-28, -40}, {-28, 40}, {-54, 40}, {-54, 20}, {54, 20}, {54, 0}, {-54, 0}, {-54, -20}, {54, -20}, {54, -40}, {-54, -40}, {-54, 40}, {54, 40}, {54, -40}}, color \u003d {0, 0, 0}), Line(points \u003d {{0, 40}, {0, -40}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-54, 20}, {-28, 0}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-54, 0}, {-28, -20}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-54, -20}, {-28, -40}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-28, 40}, {0, 20}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{0, 40}, {28, 20}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{28, 40}, {54, 20}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-54, 40}, {-28, 20}}, color \u003d {0, 0, 0}), Line(points \u003d {{-28, 40}, {-54, 20}}, color \u003d {0, 0, 0}), Text(extent \u003d {{-54, -40}, {-30, -56}}, textString \u003d \"u1\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{28, 58}, {52, 44}}, textString \u003d \"u2\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{-2, 12}, {32, -22}}, textString \u003d \"y\", lineColor \u003d {0, 0, 255})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"CombiTable2D","restriction":"model","wholeName":"Modelica.Blocks.Tables.CombiTable2D","comment":"Table look-up in two dimensions (matrix/file) ","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Line(points \u003d {{-60, 40}, {-60, -40}, {60, -40}, {60, 40}, {30, 40}, {30, -40}, {-30, -40}, {-30, 40}, {-60, 40}, {-60, 20}, {60, 20}, {60, 0}, {-60, 0}, {-60, -20}, {60, -20}, {60, -40}, {-60, -40}, {-60, 40}, {60, 40}, {60, -40}}, color \u003d {0, 0, 0}), Line(points \u003d {{0, 40}, {0, -40}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-60, 20}, {-30, 0}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-60, 0}, {-30, -20}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-60, -20}, {-30, -40}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-30, 40}, {0, 20}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{0, 40}, {30, 20}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{30, 40}, {60, 20}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-60, 40}, {-30, 20}}, color \u003d {0, 0, 0}), Line(points \u003d {{-30, 40}, {-60, 20}}, color \u003d {0, 0, 0})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"69","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{-120,70},{-100,60},{-120,50},{-120,70}},lineColor\u003d{0, 0, 127},fillColor\u003d{0, 0, 127},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,77},{-122,72}},lineColor\u003d{0, 0, 127},textString\u003d\"u1\")}","\u003d{Polygon(points\u003d{{-120,-50},{-100,-60},{-120,-70},{-120,-50}},lineColor\u003d{0, 0, 127},fillColor\u003d{0, 0, 127},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,-43},{-122,-48}},lineColor\u003d{0, 0, 127},textString\u003d\"u2\")}","\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{0, 0, 127},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{0, 0, 127},textString\u003d\"y\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{2, 2}"},"name":"SI2SO","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.SI2SO","comment":"2 Single Input / 1 Single Output continuous control block","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[{"ID":"65","diagramGraphic":{"graphicList":[]},"name":"BlockIcon","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.BlockIcon","comment":"Basic graphical layout of input/output block","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, -100}, {100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-150, 150}, {150, 110}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"59","declarationName":"u1","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealInput","rotation":"0","extent":"{{-140, 40}, {-100, 80}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"59","declarationName":"u2","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealInput","rotation":"0","extent":"{{-140, -80}, {-100, -40}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"60","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"268","declarationName":"smoothness","diagramGraphic":{"graphicList":[]},"name":"Smoothness","restriction":"type","wholeName":"Modelica.Blocks.Types.Smoothness","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"name":"tableOnFile","type":"Boolean","value":"false","enumList":[],"annotationGroup":"\"table data definition\"","path":"Boolean","desc":"true, if table is defined on file or in function usertab","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"name":"table","type":"Real","value":"fill(0.0, 0, 2)","enumList":[],"annotationGroup":"\"table data definition\"","path":"Real","desc":"table matrix (grid u1 \u003d first column, grid u2 \u003d first row; e.g. table\u003d[0,0;0,1])","variability":"parameter","wholename":"Real"},{"header":true,"inherited":false,"name":"tableName","type":"String","value":"\"NoName\"","enumList":[],"annotationGroup":"\"table data definition\"","path":"String","desc":"table name on file or in function usertab (see docu)","variability":"parameter","wholename":"String"},{"header":true,"inherited":false,"name":"fileName","type":"String","value":"\"NoName\"","enumList":[],"annotationGroup":"\"table data definition\"","path":"String","desc":"file where matrix is stored","variability":"parameter","wholename":"String"},{"header":true,"inherited":false,"name":"smoothness","type":"enumeration","value":"Types.Smoothness.LinearSegments","enumList":[{"name":"Modelica.Blocks.Types.Smoothness.LinearSegments","comment":"Table points are linearly interpolated"},{"name":"Modelica.Blocks.Types.Smoothness.ContinuousDerivative","comment":"Table points are interpolated such that the first derivative is continuous"}],"annotationGroup":"\"table data interpretation\"","path":"Modelica.Blocks.Types.Smoothness","desc":"smoothness of table interpolation","variability":"parameter","wholename":"Modelica.Blocks.Types.Smoothness"}]}