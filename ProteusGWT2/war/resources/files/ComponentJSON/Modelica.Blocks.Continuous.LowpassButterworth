{"ID":"49","diagramGraphic":{"graphicList":[" \u003d {Line(points \u003d {{40, 0}, {-40, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{-55, 55}, {55, 5}}, lineColor \u003d {0, 0, 0}, textString \u003d \"1\"), Text(extent \u003d {{-55, -5}, {55, -55}}, lineColor \u003d {0, 0, 0}, textString \u003d \"a(s)\"), Rectangle(extent \u003d {{-60, 60}, {60, -60}}, lineColor \u003d {0, 0, 255}), Line(points \u003d {{-100, 0}, {-60, 0}}, color \u003d {0, 0, 255}), Line(points \u003d {{60, 0}, {100, 0}}, color \u003d {0, 0, 255})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"LowpassButterworth","restriction":"block","wholeName":"Modelica.Blocks.Continuous.LowpassButterworth","comment":"Output the input signal filtered with a low pass Butterworth filter of any order","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Line(points \u003d {{-80, 78}, {-80, -90}}, color \u003d {192, 192, 192}), Polygon(points \u003d {{-79.5584, 91.817}, {-87.5584, 69.817}, {-71.5584, 69.817}, {-79.5584, 89.817}, {-79.5584, 91.817}}, lineColor \u003d {192, 192, 192}, fillColor \u003d {192, 192, 192}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-80, -80}, {-72, -68.53}, {-64, -39.5}, {-56, -2.522}, {-48, 32.75}, {-40, 58.8}, {-32, 71.51}, {-24, 70.49}, {-16, 58.45}, {-8, 40.06}, {0, 20.55}, {8, 4.459}, {16, -5.271}, {24, -7.629}, {32, -3.428}, {40, 5.21}, {48, 15.56}, {56, 25.03}, {64, 31.66}, {72, 34.5}, {80, 33.61}}, color \u003d {0, 0, 127}), Line(points \u003d {{-90.9779, -80.7697}, {81.0221, -80.7697}}, color \u003d {192, 192, 192}), Polygon(points \u003d {{91.3375, -79.8233}, {69.3375, -71.8233}, {69.3375, -87.8233}, {91.3375, -79.8233}}, lineColor \u003d {192, 192, 192}, fillColor \u003d {192, 192, 192}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-45.1735, -11.47}, {92, -68}}, lineColor \u003d {192, 192, 192}, textString \u003d \"LowpassButterworthFilter\"), Text(extent \u003d {{8, -106}, {8, -146}}, lineColor \u003d {0, 0, 0}, textString \u003d \"f\u003d%f\"), Text(extent \u003d {{-2, 94}, {94, 48}}, lineColor \u003d {192, 192, 192}, textString \u003d \"%n\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"68","diagramGraphic":{"graphicList":["\u003d{Polygon(points\u003d{{100,5},{110,0},{100,-5},{100,5}},lineColor\u003d{0, 0, 127},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{113,11},{113,6}},lineColor\u003d{0, 0, 127},textString\u003d\"y\")}","\u003d{Polygon(points\u003d{{-120,10},{-100,0},{-120,-10},{-120,10}},lineColor\u003d{0, 0, 127},fillColor\u003d{0, 0, 127},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-122,17},{-122,12}},lineColor\u003d{0, 0, 127},textString\u003d\"u\")}"]},"name":"SISO","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.SISO","comment":"Single Input Single Output continuous control block","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[{"ID":"65","diagramGraphic":{"graphicList":[]},"name":"BlockIcon","restriction":"block","wholeName":"Modelica.Blocks.Interfaces.BlockIcon","comment":"Basic graphical layout of input/output block","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, -100}, {100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-150, 150}, {150, 110}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"59","declarationName":"u","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-10, 85}, {-10, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealInput","rotation":"0","extent":"{{-140, -20}, {-100, 20}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealInput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {0, 0, 127}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"60","declarationName":"y","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{-100, 50}, {0, 0}, {-100, -50}, {-100, 50}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{30, 110}, {30, 60}}, lineColor \u003d {0, 0, 127}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"RealOutput","rotation":"0","extent":"{{100, -10}, {120, 10}}","restriction":"connector","wholeName":"Modelica.Blocks.Interfaces.RealOutput","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 127}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"270","declarationName":"initType","diagramGraphic":{"graphicList":[]},"name":"Init","restriction":"type","wholeName":"Modelica.Blocks.Types.Init","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"1","name":"n","type":"Integer","value":"2","enumList":[],"path":"Integer","desc":"Order of filter","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"name":"f","quantity":"Frequency","start":"1","type":"Real","unit":"Hz","enumList":[],"path":"Modelica.SIunits.Frequency","desc":"Cut-off frequency","variability":"parameter","wholename":"Modelica.SIunits.Frequency"},{"header":true,"inherited":false,"name":"initType","type":"enumeration","value":"Modelica.Blocks.Types.Init.NoInit","enumList":[{"name":"Modelica.Blocks.Types.Init.NoInit","comment":"No initialization (start values are used as guess values with fixed\u003dfalse)"},{"name":"Modelica.Blocks.Types.Init.SteadyState","comment":"Steady state initialization (derivatives of states are zero)"},{"name":"Modelica.Blocks.Types.Init.InitialState","comment":"Initialization with initial states"},{"name":"Modelica.Blocks.Types.Init.InitialOutput","comment":"Initialization with initial outputs (and steady state of the states if possibles)"}],"annotationGroup":"\"Initialization\"","path":"Modelica.Blocks.Types.Init","desc":"Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output)","variability":"parameter","wholename":"Modelica.Blocks.Types.Init"},{"header":true,"inherited":false,"name":"x1_start","type":"Real","value":"zeros(m)","enumList":[],"annotationGroup":"\"Initialization\"","path":"Real","desc":"Initial or guess values of states 1 (der(x1)\u003dx2))","variability":"parameter","wholename":"Real"},{"header":true,"inherited":false,"name":"x2_start","type":"Real","value":"zeros(m)","enumList":[],"annotationGroup":"\"Initialization\"","path":"Real","desc":"Initial or guess values of states 2","variability":"parameter","wholename":"Real"},{"header":true,"inherited":false,"name":"xr_start","type":"Real","value":"0.0","enumList":[],"annotationGroup":"\"Initialization\"","path":"Real","desc":"Initial or guess value of real pole for uneven order otherwise dummy","variability":"parameter","wholename":"Real"},{"header":true,"inherited":false,"name":"y_start","type":"Real","value":"0.0","enumList":[],"annotationGroup":"\"Initialization\"","path":"Real","desc":"Initial value of output (states are initialized in steady state if possible)","variability":"parameter","wholename":"Real"},{"header":false,"inherited":false,"name":"x1","start":"x1_start","type":"Real","enumList":[],"path":"Real","desc":"states 1 of second order filters (der(x1) \u003d x2)","causality":"output","wholename":"Real"},{"header":false,"inherited":false,"name":"x2","start":"x2_start","type":"Real","enumList":[],"path":"Real","desc":"states 2 of second order filters","causality":"output","wholename":"Real"},{"header":false,"inherited":false,"name":"xr","start":"xr_start","type":"Real","enumList":[],"path":"Real","desc":"state of real pole for uneven order otherwise dummy","causality":"output","wholename":"Real"}]}