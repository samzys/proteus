{"ID":"1252","diagramGraphic":{"graphicList":["\u003d{Rectangle(extent\u003d{{-76,-100},{-80,100}},lineColor\u003d{255, 255, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Line(points\u003d{{-100, 100}, {-100, -100}},color\u003d{0, 0, 0},thickness\u003d0.5),Line(points\u003d{{100, 100}, {100, -100}},color\u003d{0, 0, 0},thickness\u003d0.5)}","\u003d{Polygon(points\u003d{{-103,1},{-100,0},{-103,-1},{-103,1}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-107,3},{-100,1}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}","\u003d{Rectangle(extent\u003d{{75,100},{79,-100}},lineColor\u003d{255, 255, 255},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Line(points\u003d{{-100, 100}, {-100, -100}},color\u003d{0, 0, 0},thickness\u003d0.5),Line(points\u003d{{100, 100}, {100, -100}},color\u003d{0, 0, 0},thickness\u003d0.5)}"," \u003d {Line(points \u003d {{-100, 0}, {-80, 0}}, color \u003d {0, 0, 0}), Line(points \u003d {{80, 0}, {100, 0}}, color \u003d {0, 0, 0})}","\u003d{Rectangle(extent\u003d{{100,1},{102,-1}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{100,2},{105,1}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Parallel","restriction":"block","wholeName":"Modelica.StateGraph.Parallel","comment":"Parallel splitting of execution path (use component between two transitions)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Line(points \u003d {{-100, 0}, {-80, 0}}, color \u003d {0, 0, 0}), Line(points \u003d {{80, 0}, {100, 0}}, color \u003d {0, 0, 0}), Line(points \u003d {{-80, 100}, {80, 100}}, color \u003d {0, 0, 0}, pattern \u003d LinePattern.Dot), Line(points \u003d {{-80, -100}, {80, -100}}, color \u003d {0, 0, 0}, pattern \u003d LinePattern.Dot)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-106, -3}, {-100, 3}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, -2}, {104, 2}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]},{"ID":"1253","declarationName":"join","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {255, 255, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-100, 100}, {-100, -100}}, color \u003d {0, 0, 0}, thickness \u003d 0.5), Line(points \u003d {{100, 100}, {100, -100}}, color \u003d {0, 0, 0}, thickness \u003d 0.5)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in_forParallel","rotation":"0","extent":"{{75, 100}, {80, -100}}","restriction":"connector","wholeName":"Modelica.StateGraph.Parallel.Transition_in_forParallel","arrayFormList":["nBranches"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {255, 255, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-100, 100}, {-100, -100}}, color \u003d {0, 0, 0}, thickness \u003d 0.5), Line(points \u003d {{100, 100}, {100, -100}}, color \u003d {0, 0, 0}, thickness \u003d 0.5)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1254","declarationName":"split","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {255, 255, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-100, 100}, {-100, -100}}, color \u003d {0, 0, 0}, thickness \u003d 0.5), Line(points \u003d {{100, 100}, {100, -100}}, color \u003d {0, 0, 0}, thickness \u003d 0.5)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out_forParallel","rotation":"0","extent":"{{-75, 100}, {-80, -100}}","restriction":"connector","wholeName":"Modelica.StateGraph.Parallel.Transition_out_forParallel","arrayFormList":["nBranches"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {255, 255, 255}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-100, 100}, {-100, -100}}, color \u003d {0, 0, 0}, thickness \u003d 0.5), Line(points \u003d {{100, 100}, {100, -100}}, color \u003d {0, 0, 0}, thickness \u003d 0.5)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"1","name":"nBranches","type":"Integer","value":"2","enumList":[],"path":"Integer","desc":"Number of parallel branches that are executed in parallel","variability":"parameter","wholename":"Integer"}]}