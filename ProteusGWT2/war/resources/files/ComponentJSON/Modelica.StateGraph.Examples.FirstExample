{"ID":"1211","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"false"},"name":"FirstExample","restriction":"model","wholeName":"Modelica.StateGraph.Examples.FirstExample","comment":"A first simple StateGraph example","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"\u003d{Line(points\u003d{{-27.5, 10}, {-14, 10}},color\u003d{0, 0, 0})}","startpin":"initialStep.outPort","endpin":"transition1.inPort"},{"value":"\u003d{Line(points\u003d{{-8.5, 10}, {9, 10}},color\u003d{0, 0, 0})}","startpin":"transition1.outPort","endpin":"step.inPort"},{"value":"\u003d{Line(points\u003d{{30.5, 10}, {46, 10}},color\u003d{0, 0, 0})}","startpin":"step.outPort","endpin":"transition2.inPort"},{"value":"\u003d{Line(points\u003d{{51.5, 10}, {70, 10}, {70, 32}, {-62, 32}, {-62, 10}, {-49, 10}},color\u003d{0, 0, 0})}","startpin":"transition2.outPort","endpin":"initialStep.inPort"}],"extendComps":[{"ID":"592","diagramGraphic":{"graphicList":[]},"name":"Example","restriction":"model","wholeName":"Modelica.Icons.Example","comment":"Icon for an example model","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, -100}, {80, 50}}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid, lineColor \u003d {0, 0, 255}), Polygon(points \u003d {{-100, 50}, {-80, 70}, {100, 70}, {80, 50}, {-100, 50}}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid, lineColor \u003d {0, 0, 255}), Polygon(points \u003d {{100, 70}, {100, -80}, {80, -100}, {80, 50}, {100, 70}}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid, lineColor \u003d {0, 0, 255}), Text(extent \u003d {{-96, 3}, {77, -49}}, lineColor \u003d {0, 0, 255}, textString \u003d \"Example\"), Text(extent \u003d {{-120, 132}, {120, 73}}, lineColor \u003d {255, 0, 0}, textString \u003d \"%name\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]}],"includeComps":[{"ID":"1243","declarationName":"initialStep","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}), Rectangle(extent \u003d {{-80, 80}, {80, -80}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"InitialStep","rotation":"0","extent":"{{-48, 0}, {-28, 20}}","restriction":"block","wholeName":"Modelica.StateGraph.InitialStep","comment":"Initial step (\u003d step that is active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Rectangle(extent \u003d {{-80, 80}, {80, -80}}, lineColor \u003d {0, 0, 0})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1247","declarationName":"transition1","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{-20, 0}, {0, 20}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"1","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"1","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1245","declarationName":"step","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0})}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step","rotation":"0","extent":"{{10, 0}, {30, 20}}","restriction":"block","wholeName":"Modelica.StateGraph.Step","comment":"Ordinary step (\u003d step that is not active when simulation starts)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1238","diagramGraphic":{"graphicList":[],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"},"name":"PartialStep","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialStep","comment":"Partial step with one input and one output transition port","arrayFormList":[],"iconGraphicList":[],"connects":[{"value":"","startpin":"outerStatePort.subgraphStatePort","endpin":"stateGraphRoot.subgraphStatePort"}],"extendComps":[],"includeComps":[{"ID":"1230","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_in","rotation":"0","extent":"{{-120, 10}, {-100, -10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_in","comment":"Input port of a step","arrayFormList":["nIn"],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is activated","causality":"input","wholename":"Boolean"}]},{"ID":"1231","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-100, 100}, {186, 58}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Step_out","rotation":"0","extent":"{{100, 5}, {110, -5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Step_out","comment":"Output port of a step","arrayFormList":["nOut"],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step is active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step is deactivated","causality":"input","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":false,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":false,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":false,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":true,"inherited":true,"min":"0","name":"nIn","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of input connections","variability":"parameter","wholename":"Integer"},{"header":true,"inherited":true,"min":"0","name":"nOut","type":"Integer","value":"1","enumList":[],"path":"Integer","desc":"Number of output connections","variability":"parameter","wholename":"Integer"},{"header":false,"inherited":true,"name":"localActive","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"active","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true if step is active, otherwise the step is not active","causality":"output","wholename":"Boolean"}]},{"ID":"1247","declarationName":"transition2","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}"," \u003d {Line(points \u003d {{-31, 0}, {-11, 0}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{-10, 100}, {10, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition","rotation":"0","extent":"{{40, 0}, {60, 20}}","restriction":"block","wholeName":"Modelica.StateGraph.Transition","comment":"Transition where the fire condition is set by a modification of variable condition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-10, 100}, {10, -100}}, fillColor \u003d DynamicSelect({0, 0, 0}, if enableFire \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-30, 0}, {-10, 0}}, color \u003d {0, 0, 0}), Text(extent \u003d {{200, 110}, {-200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Text(extent \u003d {{20, 20}, {200, 45}}, lineColor \u003d DynamicSelect({0, 0, 0}, if enableTimer \u003c 0.5 then {255, 255, 255} else {0, 0, 0}), textString \u003d \"%waitTime\"), Text(extent \u003d {{-200, -120}, {200, -145}}, lineColor \u003d DynamicSelect({0, 0, 0}, if condition \u003e 0.5 then {0, 255, 0} else {0, 0, 0}), textString \u003d \"%condition\")}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[{"ID":"1240","diagramGraphic":{"graphicList":["\u003d{Text(extent\u003d{{10,5},{22,3}},lineColor\u003d{0, 0, 0},textString\u003d\"outPort\"),Rectangle(extent\u003d{{10,2},{15,-2}},lineColor\u003d{0, 0, 0},fillColor\u003d{255, 255, 255},fillPattern\u003dFillPattern.Solid)}","\u003d{Polygon(points\u003d{{-40,5},{-30,0},{-40,-5},{-40,5}},lineColor\u003d{0, 0, 0},fillColor\u003d{0, 0, 0},fillPattern\u003dFillPattern.Solid),Text(extent\u003d{{-54,10},{-30,6}},lineColor\u003d{0, 0, 0},textString\u003d\"inPort\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"PartialTransition","restriction":"block","wholeName":"Modelica.StateGraph.Interfaces.PartialTransition","comment":"Partial transition with input and output connections","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[{"ID":"665","declarationName":"waitTime","diagramGraphic":{"graphicList":[]},"name":"Time","restriction":"type","wholeName":"Modelica.SIunits.Time","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[]},{"ID":"1232","declarationName":"inPort","diagramGraphic":{"graphicList":[" \u003d {Polygon(points \u003d {{0, 50}, {100, 0}, {0, -50}, {0, 50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-141, 100}, {100, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\")}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_in","rotation":"0","extent":"{{-50, -10}, {-30, 10}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_in","comment":"Input port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Polygon(points \u003d {{-100, 100}, {100, 0}, {-100, -100}, {-100, 100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"available","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition input is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"reset","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and the step connected to the transition input is deactivated","causality":"output","wholename":"Boolean"}]},{"ID":"1233","declarationName":"outPort","diagramGraphic":{"graphicList":[" \u003d {Text(extent \u003d {{-100, 100}, {146, 60}}, lineColor \u003d {0, 0, 0}, textString \u003d \"%name\"), Rectangle(extent \u003d {{-100, 50}, {0, -50}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}"],"extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"},"name":"Transition_out","rotation":"0","extent":"{{10, -5}, {20, 5}}","restriction":"connector","wholeName":"Modelica.StateGraph.Interfaces.Transition_out","comment":"Output port of a transition","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Rectangle(extent \u003d {{-100, 100}, {100, -100}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {255, 255, 255}, fillPattern \u003d FillPattern.Solid)}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true","grid":"{1, 1}"}],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"occupied","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if step connected to the transition output is active","causality":"input","wholename":"Boolean"},{"header":false,"inherited":false,"name":"set","type":"Boolean","enumList":[],"path":"Boolean","desc":"true, if transition fires and step connected to the transition output becomes active","causality":"output","wholename":"Boolean"}]}],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":false,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":false,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"1","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":false,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"localCondition","type":"Boolean","value":"true","enumList":[],"path":"Boolean","desc":"\u003d true, if transition may fire","causality":"input","wholename":"Boolean"},{"header":true,"inherited":true,"name":"enableTimer","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Timer\"","path":"Boolean","desc":"\u003d true, if timer is enabled","variability":"parameter","wholename":"Boolean"},{"header":true,"inherited":true,"min":"0","name":"waitTime","quantity":"Time","type":"Real","unit":"s","value":"1","enumList":[],"annotationGroup":"\"Timer\"","path":"Modelica.SIunits.Time","desc":"Wait time before transition fires","variability":"parameter","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"t","quantity":"Time","type":"Real","unit":"s","enumList":[],"path":"Modelica.SIunits.Time","desc":"\u003d actual waiting time (transition will fire when t \u003e waitTime)","causality":"output","wholename":"Modelica.SIunits.Time"},{"header":false,"inherited":true,"name":"enableFire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if all firing conditions are true","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"fire","type":"Boolean","enumList":[],"path":"Boolean","desc":"\u003d true, if transition fires","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"condition","type":"Boolean","value":"true","enumList":[],"annotationGroup":"\"Fire condition\"","path":"Boolean","desc":"\u003d true, if transition may fire (time varying expression)","causality":"input","wholename":"Boolean"}]},{"ID":"1258","declarationName":"stateGraphRoot","diagramGraphic":{"graphicList":[]},"name":"StateGraphRoot","extent":"{{-80, 60}, {-60, 80}}","restriction":"model","wholeName":"Modelica.StateGraph.StateGraphRoot","comment":"Root of a StateGraph (has to be present on the highest level of a StateGraph)","arrayFormList":[],"iconGraphicList":[{"graphics":" \u003d {Text(extent \u003d {{-200, 110}, {200, 150}}, textString \u003d \"%name\", lineColor \u003d {0, 0, 255}), Rectangle(extent \u003d {{-100, 100}, {100, -100}}, fillColor \u003d DynamicSelect({255, 255, 255}, if active \u003e 0.5 then {0, 255, 0} else {255, 255, 255}), lineColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Text(extent \u003d {{-92, 78}, {96, 34}}, lineColor \u003d {0, 0, 0}, textString \u003d \"root\"), Rectangle(extent \u003d {{-82, -6}, {-44, -40}}, lineColor \u003d {0, 0, 0}), Line(points \u003d {{0, 10}, {0, -60}}, color \u003d {0, 0, 0}), Rectangle(extent \u003d {{48, -6}, {86, -40}}, lineColor \u003d {0, 0, 0}), Polygon(points \u003d {{-12, -16}, {0, -22}, {-12, -28}, {-12, -16}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{-44, -22}, {-12, -22}}, color \u003d {0, 0, 0}), Polygon(points \u003d {{36, -16}, {48, -22}, {36, -28}, {36, -16}}, lineColor \u003d {0, 0, 0}, fillColor \u003d {0, 0, 0}, fillPattern \u003d FillPattern.Solid), Line(points \u003d {{0, -22}, {36, -22}}, color \u003d {0, 0, 0})}","extent":"{{-100, -100}, {100, 100}}","preserveAspectRatio":"true"}],"connects":[],"extendComps":[{"ID":"1242","diagramGraphic":{"graphicList":[]},"name":"CompositeStepState","restriction":"model","wholeName":"Modelica.StateGraph.Interfaces.CompositeStepState","comment":"Communication channel between CompositeSteps and steps in the CompositeStep","arrayFormList":[],"iconGraphicList":[],"connects":[],"extendComps":[],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":false,"name":"suspend","type":"Boolean","value":"false","enumList":[],"path":"Boolean","desc":"","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"resume","type":"Boolean","value":"false","enumList":[],"path":"Boolean","desc":"","causality":"output","wholename":"Boolean"}]}],"includeComps":[],"superIncludeArgList":[],"parameters":[{"header":false,"inherited":true,"name":"suspend","type":"Boolean","value":"false","enumList":[],"path":"Boolean","desc":"","causality":"output","wholename":"Boolean"},{"header":false,"inherited":true,"name":"resume","type":"Boolean","value":"false","enumList":[],"path":"Boolean","desc":"","causality":"output","wholename":"Boolean"},{"header":false,"inherited":false,"name":"activeSteps","type":"Integer","enumList":[],"path":"Integer","desc":"Number of active steps within the stategraph","causality":"output","wholename":"Integer"}]}],"superIncludeArgList":[],"parameters":[]}